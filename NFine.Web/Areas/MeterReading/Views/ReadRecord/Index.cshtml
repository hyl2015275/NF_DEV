@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Index.cshtml";
}
<script>
    $(function () {
        initControl();
        gridList();
    });
    function initControl() {
        ///////////////////////////////////////////////////////设备类型
        var deviceType = top.clients.dataItems["DeviceType"];
        for (var device in deviceType) {
            if (deviceType.hasOwnProperty(device)) {
                $("#txt_type").children(".dropdown-menu").append("<li><a href='javascript:void()' data-value='" + device + "'>" + deviceType[device] + "</a></li>");
            }
        }
        $("#txt_type .dropdown-menu li").click(function () {
            var text = $(this).find('a').html();
            var value = $(this).find('a').attr('data-value');
            $(this).parent().siblings().css("color", "black");
            $("#txt_type .dropdown-text").html(text).attr('data-value', value);
        });
        ///////////////////////////////////////////////////////生产厂商
        var manufacturer = top.clients.dataItems["Manufacturer"];
        for (var factor in manufacturer) {
            if (manufacturer.hasOwnProperty(factor)) {
                $("#txt_factor").children(".dropdown-menu").append("<li><a href='javascript:void()' data-value='" + factor + "'>" + manufacturer[factor] + "</a></li>");
            }
        }
        $("#txt_factor .dropdown-menu li").click(function () {
            var text = $(this).find('a').html();
            var value = $(this).find('a').attr('data-value');
            $(this).parent().siblings().css("color", "black");
            $("#txt_factor .dropdown-text").html(text).attr('data-value', value);
        });
        ///////////////////////////////////////////////////////抄表方式
        var readType = top.clients.dataItems["ReadType"];
        for (var read in readType) {
            if (readType.hasOwnProperty(read)) {
                $("#txt_model").children(".dropdown-menu").append("<li><a href='javascript:void()' data-value='" + read + "'>" + readType[read] + "</a></li>");
            }
        }
        $("#txt_model .dropdown-menu li").click(function () {
            var text = $(this).find('a').html();
            var value = $(this).find('a').attr('data-value');
            $(this).parent().siblings().css("color", "black");
            $("#txt_model .dropdown-text").html(text).attr('data-value', value);
        });
    }
    function gridList() {
        var $gridList = $("#gridList");
        $("#btn_search").click(function () {

            var queryJson = {
                device: $("#txt_type").find('.dropdown-text').attr('data-value'),
                factor: $("#txt_factor").find('.dropdown-text').attr('data-value'),
                read: $("#txt_model").find('.dropdown-text').attr('data-value'),
                begintime: $("#txt_begintime").val(),
                endtime: $("#txt_endtime").val(),
                keyword: $("#txt_keyword").val()
            }

            $gridList.dataGrid({
                url: "/MeterReading/ReadRecord/GetGridJson",
                height: $(window).height() - 128,
                postData: {
                    queryJson: JSON.stringify(queryJson)
                },
                colModel: [
                    {
                        label: '主键', name: 'F_Id', hidden: true
                    },
                    {
                        label: '表类型',
                        name: 'F_MeterType',
                        width: 80,
                        align: 'left',
                        formatter: function (cellvalue) {
                            return top.clients.dataItems["DeviceType"][cellvalue] == undefined
                                ? ""
                                : top.clients.dataItems["DeviceType"][cellvalue];
                        }
                    },
                    {
                        label: '抄表方式',
                        name: 'F_ReadType',
                        width: 80,
                        align: 'left',
                        formatter: function (cellvalue) {
                            return top.clients.dataItems["ReadType"][cellvalue] == undefined
                                ? ""
                                : top.clients.dataItems["ReadType"][cellvalue];
                        }
                    },
                    {
                        label: '用户卡号', name: 'F_UserCard', width: 120, align: 'left'
                    },
                    {
                        label: '表计编码', name: 'F_MeterCode', width: 120, align: 'left'
                    },
                    {
                        label: '期初数', name: 'F_LastDosage', width: 80, align: 'left', formatter: function (cellValue,
                            options,
                            rowObject) {
                            return rowObject.F_MeterRate === null
                                ? cellValue
                                : (cellValue / rowObject.F_MeterRate).toFixed(2);
                        }
                    },
                    {
                        label: '期末数', name: 'F_TotalDosage', width: 80, align: 'left', formatter: function (cellValue,
                            options,
                            rowObject) {
                            return rowObject.F_MeterRate === null
                                ? cellValue
                                : (cellValue / rowObject.F_MeterRate).toFixed(2);
                        }
                    },
                    {
                        label: '倍率', name: 'F_MeterRate', width: 40, align: 'left',
                        formatter: function (cellvalue) {
                            return cellvalue === null
                                ? 1
                                : cellvalue;
                        }
                    },
                    {
                        label: '本次用量', name: 'F_ThisDosage', width: 80, align: 'left'
                    },
                    {
                        label: '累计用量', name: 'F_TotalDosage', width: 80, align: 'left'
                    },
                    {
                        label: '单位', name: 'F_Unit', width: 40, align: 'left', formatter: function (cellValue,
                            options,
                            rowObject) {
                            return top.clients.dataItems["DeviceUnit"][rowObject.F_MeterType] == undefined
                                ? ""
                                : top.clients.dataItems["DeviceUnit"][rowObject.F_MeterType];
                        }
                    },
                    {
                        label: '执行价格', name: 'F_UnitPrice', width: 80, align: 'left'
                    },
                    {
                        label: '本次计费', name: 'F_ThisBill', width: 80, align: 'left'
                    },
                    {
                        label: '本次余额', name: 'F_Balance', width: 80, align: 'left'
                    },
                    {
                        label: '客户名称', name: 'F_CustomerName', width: 80, align: 'left'
                    },
                    {
                        label: '联系方式', name: 'F_MobilePhone', width: 80, align: 'left'
                    },
                    {
                        label: '安装地址', name: 'F_CustomerAddress', width: 120, align: 'left'
                    },
                    {
                        label: "表计状态",
                        name: "F_State",
                        width: 60,
                        align: "center",
                        formatter: function (cellvalue, options, rowObject) {
                            if (cellvalue === "正常") {
                                return '<span class=\"label label-success\">正常</span>';
                            } else if (cellvalue === "异常") {
                                return '<span class=\"label label-default\">异常</span>';
                            }
                        }
                    },
                    {
                        label: "阀门状态",
                        name: "F_Details",
                        width: 60,
                        align: "center",
                        formatter: function (cellvalue, options, rowObject) {
                            if (typeof (cellvalue) != "undefined" && cellvalue != null && cellvalue != "" && cellvalue != " ") {
                                if (cellvalue.indexOf("关阀") <= 0) {
                                    return '<span class=\"label label-success\">开阀</span>';
                                } else {
                                    return '<span class=\"label label-default\">关阀</span>';
                                }
                            }
                            else {
                                return '<span class=\"label label-success\">开阀</span>';
                            }
                        }
                    },
                    {
                        label: '抄表时间',
                        name: 'F_ReadTime',
                        width: 120,
                        align: 'left',
                        formatter: "daetime",
                        formatoptions: { srcformat: 'y-m-d h:m:s', newformat: 'y-m-d h:m:s' }
                    }
                ],
                pager: "#gridPager",
                sortname: 'F_ReadTime desc',
                viewrecords: true
            });

             $gridList.jqGrid('setGridParam', {
                postData: {
                    queryJson: JSON.stringify(queryJson)
                }
            }).trigger('reloadGrid');

        });
    }
    function btn_export() {
        var queryJson = {
            device: $("#txt_type").find('.dropdown-text').attr('data-value'),
            factor: $("#txt_factor").find('.dropdown-text').attr('data-value'),
            read: $("#txt_model").find('.dropdown-text').attr('data-value'),
            begintime: $("#txt_begintime").val(),
            endtime: $("#txt_endtime").val(),
            keyword: $("#txt_keyword").val()
        }
        $.download("/MeterReading/ReadRecord/DownLoad", encodeURI("queryJson=" + JSON.stringify(queryJson)), "get");
    }
    function btn_details() {
        var keyValue = $("#gridList").jqGridRowValue().F_Id;
        $.modalOpen({
            id: "Details",
            title: "查看抄表详情",
            url: "/MeterReading/ReadRecord/Details?keyValue=" + keyValue,
            width: "450px",
            height: "510px",
            btn: null
        });
    }
</script>

<div class="topPanel">
    <div class="toolbar">
        <div class="btn-group">
            <a class="btn btn-primary" onclick="$.reload()"><span class="glyphicon glyphicon-refresh"></span></a>
        </div>
        <div class="btn-group">
            <a id="NF-export" authorize="yes" class="btn btn-primary dropdown-text" onclick="btn_export()"><i class="fa fa-floppy-o"></i>数据导出</a>
        </div>
        <div class="operate">
            <ul class="nav nav-pills">
                <li class="first">已选中<span>1</span>项</li>
                <li><a id="NF-Details" authorize="yes" onclick="btn_details()"><i class="fa fa-search-plus"></i>查看抄表详情</a></li>
            </ul>
            <a href="javascript:;" class="close"></a>
        </div>
        <script>$('.toolbar').authorizeButton()</script>
    </div>
    <div class="search">
        <table>
            <tr>
                <td>
                    <div id="txt_type" class="btn-group">
                        <a class="btn btn-default dropdown-text" data-toggle="dropdown">选择表类型</a>
                        <a class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></a>
                        <ul class="dropdown-menu"></ul>
                    </div>
                    <div id="txt_model" class="btn-group">
                        <a class="btn btn-default dropdown-text" data-toggle="dropdown">选择抄表方式</a>
                        <a class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></a>
                        <ul class="dropdown-menu"></ul>
                    </div>
                    <div id="txt_factor" class="btn-group hide">
                        <a class="btn btn-default dropdown-text" data-toggle="dropdown">选择生产厂商</a>
                        <a class="btn btn-default dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></a>
                        <ul class="dropdown-menu"></ul>
                    </div>
                </td>
                <td style="padding-left: 2px;">
                    <input type="text" placeholder="选择开始时间" readonly="readonly" id="txt_begintime" name="begintime"
                           class="btn btn-default input-wdatepicker" onfocus="WdatePicker({ isShowClear: false, dateFmt: 'yyyy-MM-dd', startDate: '%y-%M-%d', maxDate: '#F{$dp.$D(\'txt_endtime\')||\'%y-%M-%d\'}' })" value="@DateTime.Now.AddDays(-1).ToString("yyyy-MM-dd")" />
                    <input type="text" placeholder="选择结束时间" readonly="readonly" id="txt_endtime" name="endtime"
                           class="btn btn-default input-wdatepicker" onfocus="WdatePicker({ isShowClear: false, dateFmt: 'yyyy-MM-dd', minDate: '#F{$dp.$D(\'txt_begintime\')}', maxDate: '%y-%M-%d', startDate: '%y-%M-%d' })" value="@DateTime.Now.AddDays(0).ToString("yyyy-MM-dd")" />
                </td>
                <td style="padding-left: 2px;">
                    <div class="input-group">
                        <input id="txt_keyword" type="text" class="form-control" placeholder="用户卡号/表计编码/客户名称/安装地址" style="width: 200px;">
                        <span class="input-group-btn">
                            <button id="btn_search" type="button" class="btn  btn-primary"><i class="fa fa-search"></i></button>
                        </span>
                    </div>
                </td>
            </tr>
        </table>
    </div>
</div>
<div class="gridPanel">
    <table id="gridList"></table>
    <div id="gridPager"></div>
</div>